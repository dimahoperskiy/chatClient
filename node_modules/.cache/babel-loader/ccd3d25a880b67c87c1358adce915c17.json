{"ast":null,"code":"const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_TOTAL_PAGES = 'SET_TOTAL_PAGES';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nlet initialState = {\n  users: [],\n  pageSize: 5,\n  currentPage: 0,\n  totalPages: 1,\n  isFetching: false\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      // axios.put(\"http://localhost:8092/users\", {id: action.userId, follow: true})\n      return { ...state,\n        // users: axios.get(\"http://localhost:8092/users\").then(response => response)\n        users: state.users.map(el => {\n          if (el.id === action.userId) {\n            return { ...el,\n              follow: true\n            };\n          } else return el;\n        })\n      };\n\n    case UNFOLLOW:\n      // axios.put(\"http://localhost:8092/users\", {id: action.userId, follow: false})\n      return { ...state,\n        // users: axios.get(\"http://localhost:8092/users\").then(response => response)\n        users: state.users.map(el => {\n          if (el.id === action.userId) {\n            return { ...el,\n              follow: false\n            };\n          } else return el;\n        })\n      };\n\n    case SET_USERS:\n      return { ...state,\n        users: action.users\n      };\n\n    case SET_TOTAL_PAGES:\n      return { ...state,\n        totalPages: action.totalPages\n      };\n\n    case SET_CURRENT_PAGE:\n      return { ...state,\n        currentPage: action.currentPage\n      };\n\n    case TOGGLE_IS_FETCHING:\n      return { ...state,\n        isFetching: action.isFetching\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const follow = userId => ({\n  type: FOLLOW,\n  userId: userId\n});\nexport const unfollow = userId => ({\n  type: UNFOLLOW,\n  userId: userId\n});\nexport const setUsers = users => ({\n  type: SET_USERS,\n  users: users\n});\nexport const setTotalPages = totalPages => ({\n  type: SET_TOTAL_PAGES,\n  totalPages: totalPages\n});\nexport const setCurrentPage = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage: currentPage\n});\nexport const toggleIsFetching = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching: isFetching\n});\nexport default usersReducer;","map":{"version":3,"sources":["/Users/dimitry/Desktop/dev/saturnClient/src/redux/reducers/usersReducer.js"],"names":["FOLLOW","UNFOLLOW","SET_USERS","SET_TOTAL_PAGES","SET_CURRENT_PAGE","TOGGLE_IS_FETCHING","initialState","users","pageSize","currentPage","totalPages","isFetching","usersReducer","state","action","type","map","el","id","userId","follow","unfollow","setUsers","setTotalPages","setCurrentPage","toggleIsFetching"],"mappings":"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","sourcesContent":["const FOLLOW = 'FOLLOW'\nconst UNFOLLOW = 'UNFOLLOW'\nconst SET_USERS = 'SET_USERS'\nconst SET_TOTAL_PAGES = 'SET_TOTAL_PAGES'\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\n\nlet initialState = {\n    users: [],\n    pageSize: 5,\n    currentPage: 0,\n    totalPages: 1,\n    isFetching: false\n}\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW:\n            // axios.put(\"http://localhost:8092/users\", {id: action.userId, follow: true})\n            return ({\n                ...state,\n                // users: axios.get(\"http://localhost:8092/users\").then(response => response)\n                users: state.users.map(el => {\n                    if (el.id === action.userId) {\n                        return {...el, follow: true}\n                    } else return el\n                })\n            })\n        case UNFOLLOW:\n            // axios.put(\"http://localhost:8092/users\", {id: action.userId, follow: false})\n            return ({\n                ...state,\n                // users: axios.get(\"http://localhost:8092/users\").then(response => response)\n                users: state.users.map(el => {\n                    if (el.id === action.userId) {\n                        return {...el, follow: false}\n                    } else return el\n                })\n            })\n        case SET_USERS:\n            return {...state, users: action.users}\n        case SET_TOTAL_PAGES:\n            return {...state, totalPages: action.totalPages}\n        case SET_CURRENT_PAGE:\n            return {...state, currentPage: action.currentPage}\n        case TOGGLE_IS_FETCHING:\n            return {...state, isFetching: action.isFetching}\n        default:\n            return state\n    }\n\n}\n\nexport const follow = (userId) => ({type: FOLLOW, userId: userId})\nexport const unfollow = (userId) => ({type: UNFOLLOW, userId: userId})\nexport const setUsers = (users) => ({type: SET_USERS, users: users})\nexport const setTotalPages = (totalPages) => ({type: SET_TOTAL_PAGES, totalPages: totalPages})\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage: currentPage})\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching: isFetching})\n\nexport default usersReducer"]},"metadata":{},"sourceType":"module"}