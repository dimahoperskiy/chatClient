{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/dimitry/Desktop/dev/saturnClient/src/components/content/Profile/ProfileContainer.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport Profile from \"./Profile\";\nimport { setUser, toggleIsFetching } from \"../../../redux/reducers/profileReducer\";\nimport { withRouter } from \"react-router-dom\";\nimport api from \"../../../api/api\";\nimport { Redirect } from \"react-router\";\n\nlet mapStateToProps = state => {\n  return {\n    user: state.profilePage.user,\n    me: state.auth.login,\n    isFetching: state.profilePage.isFetching,\n    isLoggedIn: state.auth.isLoggedIn\n  };\n};\n\nlet mapDispatchToProps = {\n  setUser,\n  toggleIsFetching\n};\n\nclass ProfileAPI extends React.Component {\n  componentDidMount() {\n    this.props.toggleIsFetching(true);\n    let userId = this.props.match.params.userId;\n\n    if (userId) {\n      api.getUser(userId).then(data => {\n        this.props.setUser(data);\n        this.props.toggleIsFetching(false);\n      });\n    } else {\n      api.getProfile().then(data => {\n        this.props.setUser(data);\n        this.props.toggleIsFetching(false);\n      });\n    }\n  }\n\n  render() {\n    if (!this.props.isLoggedIn) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Profile, {\n        user: this.props.user,\n        isFetching: this.props.isFetching,\n        me: this.props.me,\n        isLoggedIn: this.props.isLoggedIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nlet ProfileContainer = withRouter(ProfileAPI);\n_c = ProfileContainer;\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileContainer\");","map":{"version":3,"sources":["/Users/dimitry/Desktop/dev/saturnClient/src/components/content/Profile/ProfileContainer.js"],"names":["React","connect","Profile","setUser","toggleIsFetching","withRouter","api","Redirect","mapStateToProps","state","user","profilePage","me","auth","login","isFetching","isLoggedIn","mapDispatchToProps","ProfileAPI","Component","componentDidMount","props","userId","match","params","getUser","then","data","getProfile","render","ProfileContainer"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,OAAR,EAAiBC,gBAAjB,QAAwC,wCAAxC;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,SAAQC,QAAR,QAAuB,cAAvB;;AAGA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAQ;AACJC,IAAAA,IAAI,EAAED,KAAK,CAACE,WAAN,CAAkBD,IADpB;AAEJE,IAAAA,EAAE,EAAEH,KAAK,CAACI,IAAN,CAAWC,KAFX;AAGJC,IAAAA,UAAU,EAAEN,KAAK,CAACE,WAAN,CAAkBI,UAH1B;AAIJC,IAAAA,UAAU,EAAEP,KAAK,CAACI,IAAN,CAAWG;AAJnB,GAAR;AAMH,CAPD;;AASA,IAAIC,kBAAkB,GAAG;AACrBd,EAAAA,OADqB;AAErBC,EAAAA;AAFqB,CAAzB;;AAKA,MAAMc,UAAN,SAAyBlB,KAAK,CAACmB,SAA/B,CAAyC;AACrCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWjB,gBAAX,CAA4B,IAA5B;AACA,QAAIkB,MAAM,GAAG,KAAKD,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBF,MAArC;;AAEA,QAAIA,MAAJ,EAAY;AACRhB,MAAAA,GAAG,CAACmB,OAAJ,CAAYH,MAAZ,EACKI,IADL,CACUC,IAAI,IAAI;AACV,aAAKN,KAAL,CAAWlB,OAAX,CAAmBwB,IAAnB;AACA,aAAKN,KAAL,CAAWjB,gBAAX,CAA4B,KAA5B;AACH,OAJL;AAKH,KAND,MAMO;AACHE,MAAAA,GAAG,CAACsB,UAAJ,GACKF,IADL,CACUC,IAAI,IAAI;AACV,aAAKN,KAAL,CAAWlB,OAAX,CAAmBwB,IAAnB;AACA,aAAKN,KAAL,CAAWjB,gBAAX,CAA4B,KAA5B;AACH,OAJL;AAKH;AACJ;;AAEDyB,EAAAA,MAAM,GAAG;AACL,QAAI,CAAC,KAAKR,KAAL,CAAWL,UAAhB,EAA4B;AACxB,0BAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFD,MAEO;AACH,0BACI,QAAC,OAAD;AACI,QAAA,IAAI,EAAE,KAAKK,KAAL,CAAWX,IADrB;AAEI,QAAA,UAAU,EAAE,KAAKW,KAAL,CAAWN,UAF3B;AAGI,QAAA,EAAE,EAAE,KAAKM,KAAL,CAAWT,EAHnB;AAII,QAAA,UAAU,EAAE,KAAKS,KAAL,CAAWL;AAJ3B;AAAA;AAAA;AAAA;AAAA,cADJ;AAOH;AACJ;;AAhCoC;;AAmCzC,IAAIc,gBAAgB,GAAGzB,UAAU,CAACa,UAAD,CAAjC;KAAIY,gB;AAEJ,eAAe7B,OAAO,CAACO,eAAD,EAAkBS,kBAAlB,CAAP,CAA6Ca,gBAA7C,CAAf","sourcesContent":["import React from \"react\"\nimport {connect} from \"react-redux\"\nimport Profile from \"./Profile\";\nimport {setUser, toggleIsFetching} from \"../../../redux/reducers/profileReducer\";\nimport {withRouter} from \"react-router-dom\";\nimport api from \"../../../api/api\";\nimport {Redirect} from \"react-router\";\n\n\nlet mapStateToProps = (state) => {\n    return ({\n        user: state.profilePage.user,\n        me: state.auth.login,\n        isFetching: state.profilePage.isFetching,\n        isLoggedIn: state.auth.isLoggedIn\n    })\n}\n\nlet mapDispatchToProps = {\n    setUser,\n    toggleIsFetching\n}\n\nclass ProfileAPI extends React.Component {\n    componentDidMount() {\n        this.props.toggleIsFetching(true)\n        let userId = this.props.match.params.userId\n\n        if (userId) {\n            api.getUser(userId)\n                .then(data => {\n                    this.props.setUser(data)\n                    this.props.toggleIsFetching(false)\n                })\n        } else {\n            api.getProfile()\n                .then(data => {\n                    this.props.setUser(data)\n                    this.props.toggleIsFetching(false)\n                })\n        }\n    }\n\n    render() {\n        if (!this.props.isLoggedIn) {\n            return <Redirect to=\"login\"/>\n        } else {\n            return (\n                <Profile\n                    user={this.props.user}\n                    isFetching={this.props.isFetching}\n                    me={this.props.me}\n                    isLoggedIn={this.props.isLoggedIn}/>\n            )\n        }\n    }\n}\n\nlet ProfileContainer = withRouter(ProfileAPI)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileContainer)"]},"metadata":{},"sourceType":"module"}