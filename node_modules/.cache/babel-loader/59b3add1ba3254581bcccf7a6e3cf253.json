{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/dimitry/Desktop/dev/saturnClient/src/components/content/Users/UsersContainer.js\";\nimport { connect } from \"react-redux\";\nimport { follow, setCurrentPage, setTotalPages, setUsers, toggleIsFetching, unfollow } from \"../../../redux/reducers/usersReducer\";\nimport * as React from \"react\";\nimport Users from \"./Users\";\nimport api from \"../../../api/api\";\nimport { Redirect } from \"react-router\";\n\nconst mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    currentPage: state.usersPage.currentPage,\n    totalPages: state.usersPage.totalPages,\n    isFetching: state.usersPage.isFetching,\n    isLoggedIn: state.auth.isLoggedIn\n  };\n};\n\nconst mapDispatchToProps = {\n  follow,\n  unfollow,\n  setUsers,\n  setTotalPages,\n  setCurrentPage,\n  toggleIsFetching\n};\n\nclass UsersAPI extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.paginate = i => {\n      this.props.toggleIsFetching(true);\n      this.props.setCurrentPage(i);\n      api.getPageableUsers(this.props.pageSize, i).then(data => {\n        this.props.setUsers(data.content);\n        this.props.toggleIsFetching(false);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.toggleIsFetching(true);\n    api.getPageableUsers(this.props.pageSize, this.props.currentPage).then(data => {\n      this.props.setUsers(data.content);\n      this.props.setTotalPages(data.totalPages);\n      this.props.toggleIsFetching(false);\n    });\n  }\n\n  render() {\n    if (!this.props.isLoggedIn) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Users, {\n        users: this.props.users,\n        pageSize: this.props.pageSize,\n        currentPage: this.props.currentPage,\n        totalPages: this.props.totalPages,\n        follow: this.props.follow,\n        unfollow: this.props.unfollow,\n        isFetching: this.props.isFetching,\n        isLoggedIn: this.props.isLoggedIn,\n        paginate: this.paginate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersAPI);","map":{"version":3,"sources":["/Users/dimitry/Desktop/dev/saturnClient/src/components/content/Users/UsersContainer.js"],"names":["connect","follow","setCurrentPage","setTotalPages","setUsers","toggleIsFetching","unfollow","React","Users","api","Redirect","mapStateToProps","state","users","usersPage","pageSize","currentPage","totalPages","isFetching","isLoggedIn","auth","mapDispatchToProps","UsersAPI","Component","paginate","i","props","getPageableUsers","then","data","content","componentDidMount","render"],"mappings":"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","sourcesContent":["import {connect} from \"react-redux\";\nimport {\n    follow,\n    setCurrentPage,\n    setTotalPages,\n    setUsers,\n    toggleIsFetching,\n    unfollow\n} from \"../../../redux/reducers/usersReducer\";\nimport * as React from \"react\";\nimport Users from \"./Users\";\nimport api from \"../../../api/api\";\nimport {Redirect} from \"react-router\";\n\nconst mapStateToProps = (state) => {\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        currentPage: state.usersPage.currentPage,\n        totalPages: state.usersPage.totalPages,\n        isFetching: state.usersPage.isFetching,\n        isLoggedIn: state.auth.isLoggedIn\n    }\n}\n\nconst mapDispatchToProps = {\n    follow,\n    unfollow,\n    setUsers,\n    setTotalPages,\n    setCurrentPage,\n    toggleIsFetching\n}\n\n\nclass UsersAPI extends React.Component {\n    componentDidMount() {\n        this.props.toggleIsFetching(true)\n        api.getPageableUsers(this.props.pageSize, this.props.currentPage)\n            .then(data => {\n                this.props.setUsers(data.content)\n                this.props.setTotalPages(data.totalPages)\n                this.props.toggleIsFetching(false)\n            })\n    }\n\n    paginate = (i) => {\n        this.props.toggleIsFetching(true)\n        this.props.setCurrentPage(i)\n        api.getPageableUsers(this.props.pageSize, i)\n            .then(data => {\n                this.props.setUsers(data.content)\n                this.props.toggleIsFetching(false)\n            })\n    }\n\n    render() {\n        if (!this.props.isLoggedIn) {\n            return <Redirect to=\"login\"/>\n        } else {\n            return (\n                <Users users={this.props.users}\n                       pageSize={this.props.pageSize}\n                       currentPage={this.props.currentPage}\n                       totalPages={this.props.totalPages}\n                       follow={this.props.follow}\n                       unfollow={this.props.unfollow}\n                       isFetching={this.props.isFetching}\n                       isLoggedIn={this.props.isLoggedIn}\n                       paginate={this.paginate}/>\n            )\n        }\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersAPI)\n\n"]},"metadata":{},"sourceType":"module"}